{"version":3,"sources":["pages/HomePage.js","pages/AboutPage.js","components/ToonList.js","pages/ToonListPage.js","components/NotFoundPage.js","components/VotesSection.js","components/AddToonForm.js","pages/ToonDetailPage.js","NavBar.js","components/LandingPageTable.js","pages/AddToonPage.js","pages/LandingPage.js","components/EditToonForm.js","pages/EditToonPage.js","pages/DeleteToonPage.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","Fragment","AboutPage","ToonList","param","useState","toonInfo","setToonInfo","useEffect","a","fetch","result","json","body","fetchData","others","undefined","Object","values","filter","p","id","exceptId","map","person","key","to","firstName","lastName","ToonListPage","NotFoundPage","VotesSection","votes","voteToon","method","className","onClick","AddToonForm","setFirstName","setLastName","occupation","setOccupation","gender","setGender","pictureUrl","setPictureUrl","addToon","JSON","stringify","headers","toonInfo2","setToonInfo2","type","placeholder","value","onChange","event","target","required","maxlength","class","name","for","url","style","ToonDetailPage","match","params","console","log","src","alt","NavBar","href","LandingPageTable","AddToonPage","LandingPage","EditToonPage","EditToonForm","DeleteToonPage","then","response","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.910228b7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//this is a component\r\nconst HomePage = () => (\r\n    <React.Fragment>\r\n    <h1>Hello, welcome to Toon-City !</h1>\r\n    <p>\r\nYou can view some of your favorite cartoon characters.\r\n    </p>\r\n    <p>\r\nSurely, you will be taken back in time to your youth.\r\n    </p>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nconst AboutPage = () => (\r\n    <React.Fragment>\r\n        <h1> Toon-Land</h1>\r\n    </React.Fragment>\r\n);\r\nexport default AboutPage;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\n//import toons from '../pages/toons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ToonList = (param) => {\r\n\r\n    //var others = toons;\r\n\r\n    //if (exceptId !== undefined) {\r\n        //others = toons.filter(p => p.id != exceptId.ec)\r\n    //}\r\n\r\n    const [toonInfo, setToonInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`http://data.vncvr.ca/api/people/`);\r\n            const body = await result.json();\r\n            setToonInfo(body);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    var others = toonInfo;\r\n\r\n    if (param !== undefined) {\r\n        others = Object.values(toonInfo).filter(p => p.id !== param.exceptId);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {others.map((person, key) => (\r\n                <Link key={key} to={`/detail/${person.id}`}>\r\n                    <h6>{person.id} {person.firstName} {person.lastName}</h6>\r\n                </Link>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\nexport default ToonList;\r\n","import React from 'react';\r\nimport ToonList from '../components/ToonList';\r\n\r\nconst ToonListPage = () => (\r\n    <React.Fragment>\r\n        <h1>Toons List Page</h1>\r\n        <ToonList />\r\n\r\n\r\n\r\n    </React.Fragment>\r\n);\r\nexport default ToonListPage;\r\n","import React from 'react';\r\nconst NotFoundPage = () => (\r\n    <h1>404: Page Not Found</h1>\r\n);\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\n\r\nconst VotesSection = ({ id, votes, setToonInfo }) => {\r\n  const voteToon = async () => {\r\n    const result = await fetch(`http://data.vncvr.ca/api/people/${id}/vote`, {\r\n      method: 'post',\r\n    });\r\n\r\n    const body = await result.json();\r\n    setToonInfo(body);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"panel panel-default\">\r\n        <button onClick={() => voteToon()} className=\"btn btn-success btn-sm\">Add Vote</button>\r\n        &nbsp;&nbsp;&nbsp;&nbsp;\r\n        <span className=\"text-info\">This cartoon character has received  {votes} votes.</span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default VotesSection;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ToonList from './ToonList';\r\nimport PictureList from './PictureList';\r\n\r\nconst AddToonForm = ({ setToonInfo }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [occupation, setOccupation] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  const [pictureUrl, setPictureUrl] = useState('');\r\n  const [votes, setVotes] = useState(0);\r\n\r\n  const addToon = async () => {\r\n    const result = await fetch(`http://data.vncvr.ca/api/people/`, {\r\n      method: 'post',\r\n      body: JSON.stringify({\r\n        firstName,\r\n        lastName,\r\n        occupation,\r\n        gender,\r\n        pictureUrl,\r\n        votes\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const body = await result.json();\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    const result = await fetch(`http://data.vncvr.ca/api/pictures`);\r\n    const body = await result.json(); //result is not natively a json object, this is opposite of stringefy\r\n    setToonInfo(body);\r\n  }\r\n\r\n  const [toonInfo2, setToonInfo2] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetch(`http://data.vncvr.ca/api/pictures`);\r\n      const body = await result.json();\r\n      setToonInfo2(body);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  var others = toonInfo2;\r\n\r\n  others = Object.values(toonInfo2);\r\n\r\n\r\n  return (<React.Fragment>\r\n    <div className=\"panel panel-default\">\r\n      <form>\r\n        <h3>Add toon character</h3>\r\n        <div className=\"form-group\">\r\n          <label>First Name:</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"First Name\"\r\n            value={firstName} onChange={(event) => setFirstName(event.target.value)} required maxlength=\"15\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Last Name:</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"Last Name\"\r\n            value={lastName} onChange={(event) => setLastName(event.target.value)} required maxlength=\"15\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Occupation:</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"Occupation\"\r\n            value={occupation} onChange={(event) => setOccupation(event.target.value)} required maxlength=\"15\" />\r\n        </div>\r\n\r\n\r\n        <fieldset class=\"form-group\">\r\n          <div class=\"row\">\r\n            <legend class=\"col-form-label col-sm-2 pt-0\">Gender:</legend>\r\n            <div class=\"col-sm-10\">\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios1\" value=\"M\" onChange={(event) => setGender(event.target.value)} required />\r\n                <label class=\"form-check-label\" for=\"gridRadios1\">\r\n                  M\r\n          </label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios2\" value=\"F\" onChange={(event) => setGender(event.target.value)} required />\r\n                <label class=\"form-check-label\" for=\"gridRadios2\">\r\n                  F\r\n          </label>\r\n              </div>\r\n              <div class=\"form-check disabled\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios3\" value=\"X\" onChange={(event) => setGender(event.target.value)} required />\r\n                <label class=\"form-check-label\" for=\"gridRadios3\">\r\n                  X\r\n          </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <label>Select Picture URL:</label>\r\n        <div>\r\n          <select class=\"selectpicker\" value={pictureUrl} onChange={(event) => setPictureUrl(event.target.value)}>\r\n            {others.map((person) => (\r\n              <option>{person.url}</option>\r\n            ))}\r\n\r\n          </select>\r\n        </div>\r\n        <button onClick={() => addToon()} className=\"btn btn-success\" style={{ \"margin-top\": \"25px\" }}>Add</button>\r\n      </form>\r\n    </div>\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AddToonForm;\r\n","import React, { useState, useEffect } from 'react';\r\n//import toons from './toons';\r\nimport ToonList from '../components/ToonList';\r\nimport NotFoundPage from '../components/NotFoundPage';\r\nimport VotesSection from '../components/VotesSection';\r\nimport AddToonForm from '../components/AddToonForm';\r\n\r\n\r\nconst ToonDetailPage = ({ match }) => {\r\n    //JS code\r\n    const id = match.params.id;\r\n\r\n    //const person = toons.find(\r\n    // data => data.id == id\r\n    //);\r\n\r\n    const [toonInfo, setToonInfo] = useState({\r\n        votes: 0,\r\n        id: 0,\r\n        occupation: '',\r\n        gender: '',\r\n        pictureUrl: '',\r\n        firstName: '',\r\n        lastName: '',\r\n\r\n    });\r\n    //initial state is all zero\r\n\r\n    //this is where you change the state\r\n    useEffect(() => {\r\n        //it is here that you set toonInfo data\r\n        //setToonInfo({ votes: Math.ceil(Math.random() * 10) });\r\n        const fetchData = async () => {\r\n            const result = await fetch(`http://data.vncvr.ca/api/people/${id}`);\r\n            const body = await result.json(); //result is not natively a json object, this is opposite of stringefy\r\n            setToonInfo(body);\r\n        }\r\n        fetchData();\r\n\r\n    }, [id]);\r\n    //random number being generated has to be unique...\r\n\r\n    console.log(toonInfo);\r\n\r\n    //if (!person) return <h1>Person does not exist!</h1>\r\n    if (!toonInfo) return <NotFoundPage />\r\n\r\n    //markup\r\n    return (\r\n        <React.Fragment>\r\n            <h4 className=\"text-info\">{toonInfo.id}. {toonInfo.firstName} {toonInfo.lastName}</h4>\r\n            <VotesSection id={id} votes={toonInfo.votes} setToonInfo={setToonInfo} /><hr />\r\n            <table style={{ \"width\": \"90%\", \"margin\": \"auto\" }}>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style={{ \"width\": \"15%\", \"verticalAlign\": \"top\" }}>\r\n                            <img className=\"rounded img-responsive pull-right img-thumbnail float-left\"\r\n                                style={{ \"width\": \"50%\" }}\r\n                                src={`${toonInfo.pictureUrl}`} alt={`${toonInfo.firstName} ${toonInfo.lastName}`} />\r\n                        </td>\r\n                        <td style={{ \"width\": \"65%\", \"verticalAlign\": \"top\" }}>\r\n                            <p><b>Occupation: </b>{toonInfo.occupation}</p>\r\n                            <p><b>Gender: </b>{toonInfo.gender}</p>\r\n                        </td>\r\n                        <td style={{ \"width\": \"20%\", \"verticalAlign\": \"top\" }}>\r\n                            <h3>Others:</h3>\r\n                            <ToonList exceptId={toonInfo.id} />\r\n                        </td>\r\n\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <AddToonForm />\r\n        </React.Fragment>\r\n    );\r\n\r\n\r\n\r\n}\r\nexport default ToonDetailPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst NavBar = () => (\r\n    <>\r\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n            <a className=\"navbar-brand\" href=\"/\">Toon Land</a>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/list\">Toons List</Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/home\">Landing Page</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </>\r\n);\r\nexport default NavBar;\r\n","import React, { useState, useEffect } from 'react';\r\n//import toons from '../pages/toons';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LandingPageTable = (param) => {\r\n    // var others = toons;\r\n    // if(exceptId != undefined){\r\n    //     others = toons.filter(p => p.id != exceptId.exceptId);\r\n    // }\r\n\r\n    const [toonInfo, setToonInfo] = useState({});\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const result = await fetch(`http://data.vncvr.ca/api/people/`);\r\n            const body = await result.json();\r\n            setToonInfo(body);\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    var others = toonInfo;\r\n\r\n    if (param != undefined) {\r\n        others = Object.values(toonInfo).filter(p => p.id != param.exceptId);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <table class=\"table table-bordered\" style={{ \"width\": \"90%\", \"margin\": \"auto\", }}>\r\n                <tbody>\r\n\r\n\r\n                    {others.map((person, key) => (\r\n                        <tr>\r\n\r\n                            <td><img src={person.pictureUrl} className=\"rounded img-responsive pull-right img-thumbnail float-left\"\r\n                                style={{ \"width\": \"14%\", \"margin-right\":\"25px\" }} /> <h6>{person.firstName} {person.lastName}</h6></td>\r\n\r\n                            <td> <Link key={key} to={`/edit/${person.id}`}>\r\n                                <h6>Edit</h6>\r\n                            </Link></td>\r\n                            <td><Link key={key} to={`/delete/${person.id}`}>\r\n                                <h6>Delete</h6>\r\n                            </Link></td>\r\n\r\n                        </tr>\r\n                    ))}\r\n\r\n\r\n                </tbody>\r\n            </table>\r\n\r\n        </>\r\n    )\r\n}\r\nexport default LandingPageTable;\r\n","import React from 'react';\r\nimport AddToonForm from '../components/AddToonForm'\r\n\r\n\r\nconst AddToonPage = () => (\r\n    <React.Fragment>\r\n        <h1></h1>\r\n        \r\n        <AddToonForm />\r\n\r\n\r\n\r\n    </React.Fragment>\r\n);\r\nexport default AddToonPage;\r\n","import React from 'react';\r\nimport AddToonForm from '../components/AddToonForm'\r\nimport LandingPageTable from '../components/LandingPageTable';\r\nimport AddToonPage from './AddToonPage';\r\nimport PictureList from '../components/PictureList';\r\n\r\n\r\n\r\nconst LandingPage = () => (\r\n    <React.Fragment>\r\n        <h1>Catreana Cunningham | Kyle Murdoch</h1>\r\n        <button className=\"btn btn-success\" style={{\"margin\":\"30px\"}}><a href=\"/add\" style={{\"text-decoration\":\"none\", \"color\":\"black\"}}>Add Toon</a></button>\r\n\r\n        <LandingPageTable />\r\n\r\n        \r\n\r\n\r\n\r\n    </React.Fragment>\r\n);\r\nexport default LandingPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ToonList from './ToonList';\r\nimport PictureList from './PictureList';\r\n\r\nconst AddToonForm = ({ setToonInfo }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [occupation, setOccupation] = useState('');\r\n  const [gender, setGender] = useState('');\r\n  const [pictureUrl, setPictureUrl] = useState('');\r\n  const [votes, setVotes] = useState(0);\r\n\r\n  const addToon = async () => {\r\n    const result = await fetch(`http://data.vncvr.ca/api/people/`, {\r\n      method: 'post',\r\n      body: JSON.stringify({\r\n        firstName,\r\n        lastName,\r\n        occupation,\r\n        gender,\r\n        pictureUrl,\r\n        votes\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n    const body = await result.json();\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    const result = await fetch(`http://data.vncvr.ca/api/pictures`);\r\n    const body = await result.json(); //result is not natively a json object, this is opposite of stringefy\r\n    setToonInfo(body);\r\n  }\r\n\r\n  const [toonInfo2, setToonInfo2] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await fetch(`http://data.vncvr.ca/api/pictures`);\r\n      const body = await result.json();\r\n      setToonInfo2(body);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  var others = toonInfo2;\r\n\r\n  others = Object.values(toonInfo2);\r\n\r\n\r\n  return (<React.Fragment>\r\n    <div className=\"panel panel-default\">\r\n      <form>\r\n        <h3>Add toon character</h3>\r\n        <div className=\"form-group\">\r\n          <label>First Name:</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"First Name\"\r\n            value={firstName} onChange={(event) => setFirstName(event.target.value)} required maxlength=\"15\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Last Name:</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"Last Name\"\r\n            value={lastName} onChange={(event) => setLastName(event.target.value)} required maxlength=\"15\"/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Occupation:</label>\r\n          <input className=\"form-control\" type=\"text\" placeholder=\"Occupation\"\r\n            value={occupation} onChange={(event) => setOccupation(event.target.value)} required maxlength=\"15\"/>\r\n        </div>\r\n      F\r\n\r\n        <fieldset class=\"form-group\">\r\n          <div class=\"row\">\r\n            <legend class=\"col-form-label col-sm-2 pt-0\">Gender:</legend>\r\n            <div class=\"col-sm-10\">\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios1\" value=\"M\" onChange={(event) => setGender(event.target.value)} required/>\r\n                <label class=\"form-check-label\" for=\"gridRadios1\">\r\n                  M\r\n          </label>\r\n              </div>\r\n              <div class=\"form-check\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios2\" value=\"F\" onChange={(event) => setGender(event.target.value)} required/>\r\n                <label class=\"form-check-label\" for=\"gridRadios2\">\r\n                  F\r\n          </label>\r\n              </div>\r\n              <div class=\"form-check disabled\">\r\n                <input class=\"form-check-input\" type=\"radio\" name=\"gridRadios\" id=\"gridRadios3\" value=\"X\" onChange={(event) => setGender(event.target.value)} required/>\r\n                <label class=\"form-check-label\" for=\"gridRadios3\">\r\n                  X\r\n          </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <label>Select Picture URL:</label>\r\n        <div>\r\n          <select class=\"selectpicker\" value={pictureUrl} onChange={(event) => setPictureUrl(event.target.value)}>\r\n            {others.map((person) => (\r\n              <option>{person.url}</option>\r\n            ))}\r\n\r\n          </select>\r\n        </div>\r\n        <button onClick={() => addToon()} className=\"btn btn-success\" style={{ \"margin-top\": \"25px\" }}>Add</button>\r\n      </form>\r\n    </div>\r\n  </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AddToonForm;\r\n","import React from 'react';\r\nimport AddToonForm from '../components/AddToonForm'\r\nimport EditToonForm from '../components/EditToonForm';\r\n\r\n\r\nconst EditToonPage = () => (\r\n    <React.Fragment>\r\n        <h1></h1>\r\n        \r\n        <EditToonForm />\r\n\r\n\r\n\r\n    </React.Fragment>\r\n);\r\nexport default EditToonPage;\r\n","import React, { useState, useEffect } from 'react';\r\n//import toons from './toons';\r\nimport ToonList from '../components/ToonList';\r\nimport NotFoundPage from '../components/NotFoundPage';\r\nimport VotesSection from '../components/VotesSection';\r\nimport AddToonForm from '../components/AddToonForm';\r\n\r\n\r\nconst DeleteToonPage = ({ match }) => {\r\n    //JS code\r\n    const id = match.params.id;\r\n\r\n    //const person = toons.find(\r\n    // data => data.id == id\r\n    //);\r\n\r\n    const [toonInfo, setToonInfo] = useState({\r\n        votes: 0,\r\n        id: 0,\r\n        occupation: '',\r\n        gender: '',\r\n        pictureUrl: '',\r\n        firstName: '',\r\n        lastName: '',\r\n\r\n    });\r\n    //initial state is all zero\r\n\r\n    //this is where you change the state\r\n    useEffect(() => {\r\n        //it is here that you set toonInfo data\r\n        //setToonInfo({ votes: Math.ceil(Math.random() * 10) });\r\n        const fetchData = async () => {\r\n            const result = await fetch(`http://data.vncvr.ca/api/people/${id}`);\r\n            const body = await result.json(); //result is not natively a json object, this is opposite of stringefy\r\n            setToonInfo(body);\r\n        }\r\n        fetchData();\r\n\r\n    }, [id]);\r\n    //random number being generated has to be unique...\r\n\r\n    console.log(toonInfo);\r\n\r\n    //if (!person) return <h1>Person does not exist!</h1>\r\n    if (!toonInfo) return <NotFoundPage />\r\n\r\n    function deleteData() {\r\n        return fetch(`http://data.vncvr.ca/api/people/${id}`, {\r\n          method: 'delete'\r\n        })\r\n        .then(response => response.json());\r\n      }\r\n\r\n    //markup\r\n    return (\r\n        <React.Fragment>\r\n            <h4 className=\"text-info\">{toonInfo.firstName} {toonInfo.lastName}</h4>\r\n            <table style={{ \"width\": \"90%\", \"margin\": \"auto\" }}>\r\n                <tbody>\r\n                    <tr>\r\n                        <td style={{ \"width\": \"15%\", \"verticalAlign\": \"top\" }}>\r\n                            <img className=\"rounded img-responsive pull-right img-thumbnail float-left\"\r\n                                style={{ \"width\": \"50%\" }}\r\n                                src={`${toonInfo.pictureUrl}`} alt={`${toonInfo.firstName} ${toonInfo.lastName}`} />\r\n                        </td>\r\n                        <td style={{ \"width\": \"65%\", \"verticalAlign\": \"top\" }}>\r\n                            <p><b>Occupation: </b>{toonInfo.occupation}</p>\r\n                            <p><b>Gender: </b>{toonInfo.gender}</p>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            <button onClick={() => deleteData()} className=\"btn btn-danger\" style={{\"margin\":\"30px\"}}><a href=\"/home\" style={{\"text-decoration\":\"none\", \"color\":\"black\"}}>Confirm deletion of {toonInfo.firstName} {toonInfo.lastName}</a></button>\r\n        </React.Fragment>\r\n    );\r\n\r\n\r\n\r\n}\r\nexport default DeleteToonPage;\r\n","import React from 'react';\r\nimport HomePage from './pages/HomePage';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'jquery/dist/jquery.min.js';\r\nimport 'popper.js/dist/popper.min.js';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch\r\n} from 'react-router-dom';\r\nimport AboutPage from './pages/AboutPage';\r\nimport ToonListPage from './pages/ToonListPage';\r\nimport ToonDetailPage from './pages/ToonDetailPage';\r\nimport NavBar from './NavBar';\r\nimport NotFoundPage from './components/NotFoundPage';\r\nimport LandingPage from './pages/LandingPage';\r\nimport AddToonPage from './pages/AddToonPage';\r\nimport EditToonPage from './pages/EditToonPage';\r\nimport DeleteToonPage from './pages/DeleteToonPage';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Router>\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" component={HomePage} exact />\r\n          <Route path=\"/about\" component={AboutPage} exact />\r\n          <Route path=\"/list\" component={ToonListPage} exact />\r\n          <Route path=\"/detail/:id\" component={ToonDetailPage} exact />\r\n          <Route path=\"/home\" component={LandingPage} exact />\r\n          <Route path=\"/add\" component={AddToonPage} exact />\r\n          <Route path=\"/edit/:id\" component={EditToonPage} exact />\r\n          <Route path=\"/delete/:id\" component={DeleteToonPage} exact />\r\n          <Route component={NotFoundPage} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}